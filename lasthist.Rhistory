savehistory("~/no@guff.eu/Rscripts/NSBenthos/bencalcs/historynsb.Rhistory")
nsbenthosdata <-read.csv("~/no@guff.eu/Bucket_Trans/FEdp_20141008122542-csv.csv", header=TRUE, strip.white = TRUE, na.strings = c("NA",""))
View(nsbenthosdata)
nsbenthosdata$countsp <- ave(as.numeric(nsbenthosdata$spec), nsbenthosdata$spec, FUN = length)
nsbenthosdata$idx <- as.integer(interaction(nsbenthosdata$x, nsbenthosdata$y))
##nbcount<-ddply(nbcount, .(idx), mutate, count = length(unique(spec)))
#drop species with fewer than 20 representatives
nb25 <- nsbenthosdata[nsbenthosdata$countsp > 25, ]
#nb25 <- nbcount[!(as.numeric(nbcount$spec) %in% which(table(nbcount$countsp)<25)),]
nb25 <- droplevels(nb25)
nb25$Lon <- nb25$x
nb25$Lat <- nb25$y
## counts of combinations of values - perhaps use for species by year?
##ddply(nsbenthosdata, .(spec?date?), mutate, count = length(unique(spec)))
#spec_count<- count(nsbenthosdata, vars = "spec")
#nsbenthosdata <- join(nsbenthosdata, spec_count)
#nsbenthosdata <- droplevels(subset(nsbenthosdata, freq > 20))
#1 CONVERT TO PROJECTED COORDINATES [csv>spatial>data.frame]
library("rgdal")
#define names
bd <- nb25
crs.geo <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")  # geographical, datum WGS84
ncrs.geo <- CRS("+proj=utm +zone=31 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
coordinates(bd) <- ~x+y
proj4string(bd) <- crs.geo  # define projection system of our data
bd <- spTransform(bd, ncrs.geo)
bd <-as.data.frame(bd, xy=TRUE)
out<- lm(bd$depth ~ poly(bd$Lat, 3)) #out<- lm(bd$depth ~ poly(bd$Lat, 3), na.action="na.exclude")
##create output values - include dataframe to get same length of vector
depthbd <- predict(out,bd)
###function
##impute <- function (a, a.impute){ifelse (is.na(a), a.impute, a)}
##substitute na values for imputed polynomial fit values
bd$depth2 <- impute(bd$depth, depthbd)
#log transform abundance
bd$labun <- log1p(bd$abun)
impute <- function (a, a.impute){ifelse (is.na(a), a.impute, a)}
it values
bd$depth2 <- impute(bd$depth, depthbd)
library("reshape2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
bd25w<-dcast(spec~idx,data = bd,value.var = "labun")
bd25w<-dcast(spec~idx,data = bd,value.var = "labun",fun.aggregate = max)
bd25w<-dcast(spec~idx,data = bd,value.var = "labun",fun.aggregate = max,fill=0)
library("vegan", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
bd25w.hel = decostand(bd25w, "hel")
bd25w.DHell = dist(bd25w.hel)
bd25w.hel = decostand(bd25w, "hel", na.rm = TRUE)
bd25w <- as.data.frame(bd25w)
View(bd25w)
bd25w<-dcast(idx~spec,data = bd,value.var = "labun",fun.aggregate = max,fill=0)
View(bd25w)
bd25wt <- bd25w[,-1]
rownames(bd25wt) <- bd25w[,1]
View(bd25wt)
bd25w <- bd25wt
rem(bd25wt)
rm(bd25wt)
bd25w.hel = decostand(bd25w, "hel")
bd25w.DHell = dist(bd25w.hel)
bd25w.hel = decostand(bd25w, "hel", na.rm=TRUE)
bd25w.DHell = dist(bd25w.hel)
install.packages("labdsv")
library("labdsv", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
toto2 = bestnmds(bd25.DHell, k=2, itr=20)
toto2 = bestnmds(bd25w.DHell, k=2, itr=20)
plot(toto2)
toto3 = metaMDS(bd25w.hel, distance="euclidean")
plot(toto3, type="t")
toto3 = metaMDS(bd25w.hel, distance="euclidean", na.rm=TRUE)
plot(toto3, type="t")
bd25w.he <- na.omit(bd25w.hel)
View(bd25w.he)
View(bd25w.hel)
View(bd)
hist(bd$labun(which(bd$spec="Animalia")))
hist(bd$labun(which(bd$spec==Animalia)))
hist(bd$labun[bd$spec=="Animalia"])
hist(bd$labun[bd$spec=="Animalia",])
hist(bd$labun(which([bd$spec=="Animalia",]))
hist(bd$labun(which(bd[bd$spec=="Animalia",]))
hist(bd$labun(which(bd[bd$spec=="Animalia",])))
hist(bd$labun[which(bd$spec=='Animalia'), ])
n<-(bd$labun[which(bd$spec=='Animalia'), ])
n<-(bd$labun[bd[which(bd$spec=='Animalia'), ]])
n<-(bd$labun[bd[which(bd$spec=='Animalia'), ],])
hist(subset(bd, spec=='Animalia', select=c(labun))
)
x<-(subset(bd, spec=='Animalia', select=c(labun)))
hist(x)
max(x)
x<-(subset(nsbenthosdata, spec=='Animalia', select=c(abun)))
max(x)
savehistory("~/no@guff.eu/Rscripts/NSBenthos/bencalcs/lasthist.Rhistory")
